{"version":3,"sources":["Components/Header.js","Components/SqButton.js","Components/Square.js","Components/Board.js","Components/Footer.js","App.js","index.js"],"names":["Header","SqButton","markSpace","id","className","onClick","e","Square","Board","Footer","player","newGame","winner","moveCount","App","useState","boardState","setBoardState","currentPlayer","setCurrentPlayer","setWinner","setMoveCount","winConditions","checkForWin","counter","forEach","array","console","log","target","innerHTML","preventDefault","newMCount","holdState","alert","window","location","reload","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAQeA,EARA,WACb,OACE,iCACE,gDCMSC,EATE,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,UAAWC,EAAQ,EAARA,GAE5B,OACE,wBAAQC,UAAU,WAAWC,QAAS,SAACC,GAAD,OAAOJ,EAAUC,EAAIG,IAA3D,SACE,4BAAI,QCMKC,EARA,SAAC,GAAqB,IAApBL,EAAmB,EAAnBA,UAAWC,EAAQ,EAARA,GAC1B,OACE,qBAAKC,UAAU,SAAf,SACE,cAAC,EAAD,CAAUF,UAAWA,EAAWC,GAAIA,OCmB3BK,EAtBD,SAAC,GAAiB,IAAhBN,EAAe,EAAfA,UACd,OACE,sBAAKE,UAAU,QAAf,UACE,sBAAKA,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,GAAI,EAAGD,UAAWA,IAC1B,cAAC,EAAD,CAAQC,GAAI,EAAGD,UAAWA,IAC1B,cAAC,EAAD,CAAQC,GAAI,EAAGD,UAAWA,OAE5B,sBAAKE,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,GAAI,EAAGD,UAAWA,IAC1B,cAAC,EAAD,CAAQC,GAAI,EAAGD,UAAWA,IAC1B,cAAC,EAAD,CAAQC,GAAI,EAAGD,UAAWA,OAE5B,sBAAKE,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,GAAI,EAAGD,UAAWA,IAC1B,cAAC,EAAD,CAAQC,GAAI,EAAGD,UAAWA,IAC1B,cAAC,EAAD,CAAQC,GAAI,EAAGD,UAAWA,WCPnBO,EAXA,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACzC,OACE,yBAAQT,UAAU,SAAlB,UACIS,EAAY,EAAI,wCAAWH,EAAS,IAAM,IAA1B,uBAAsD,KACxE,mBAAGN,UAAU,SAAb,+FACA,wBAAQC,QAASM,EAAjB,sBACA,4BAAIC,QC0EKE,MAzEf,WAEE,MAAoCC,mBAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAA9D,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0CF,mBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA4BJ,mBAAS,6BAArC,mBAAOH,EAAP,KAAeQ,EAAf,KACA,EAAkCL,mBAAS,GAA3C,mBAAOF,EAAP,KAAkBQ,EAAlB,KA+BMC,EAAgB,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAGrGC,EAAc,SAACP,EAAYQ,GAC5BA,EAAU,IAEbF,EAAcG,SAAQ,SAAAC,GAEpB,GADAC,QAAQC,IAAIZ,EAAYU,EAAM,IAAO,IAAMV,EAAYU,EAAM,IAAO,IAAMV,EAAYU,EAAM,KACzFV,EAAYU,EAAM,MAASV,EAAYU,EAAM,KAAQV,EAAYU,EAAM,MAASV,EAAYU,EAAM,IAAM,CACzG,GAA4B,IAAzBV,EAAWU,EAAM,IAElB,YADAN,EAAU,kBAEL,GAA6B,IAAzBJ,EAAWU,EAAM,IAE1B,YADAN,EAAU,sBAMD,IAAZI,GACDJ,EAAU,sDAQd,OACE,sBAAKhB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAOF,UA5DO,SAACC,EAAIG,GAErB,GAA0B,YAAvBA,EAAEuB,OAAOC,UAAZ,CAMAxB,EAAEyB,iBAEoB,IAAlBb,EACFZ,EAAEuB,OAAOC,UAAY,IACM,IAAlBZ,IACTZ,EAAEuB,OAAOC,UAAY,KAGvB,IAAIE,EAAYnB,EAAY,EAC5BQ,EAAaW,GAEb,IAAIC,EAAS,YAAOjB,GACpBiB,EAAW9B,GAAOe,EAClBD,EAAc,YAAIgB,IAElBV,EAAYU,EAAWD,GAEvBb,GAAkBD,EAAgB,GAAK,QApBrCgB,MAAM,qFAwDN,cAAC,EAAD,CAAQxB,OAAQQ,EAAeP,QARnB,WACdwB,OAAOC,SAASC,UAOmCzB,OAAQA,EAAQC,UAAWA,QCrElFyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4be64a7b.chunk.js","sourcesContent":["const Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Tic Tac Toe</h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","const SqButton = ({markSpace, id}) => {\r\n\r\n  return (\r\n    <button className=\"sqButton\" onClick={(e) => markSpace(id, e)}>\r\n      <p>{''}</p>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default SqButton\r\n","import SqButton from './SqButton'\r\n\r\nconst Square = ({markSpace, id}) => {\r\n  return (\r\n    <div className=\"square\">\r\n      <SqButton markSpace={markSpace} id={id}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Square\r\n","import Square from './Square';\r\n\r\nconst Board = ({markSpace}) => {\r\n  return (\r\n    <div className='board'>\r\n      <div className='row'>\r\n        <Square id={0} markSpace={markSpace}/>\r\n        <Square id={3} markSpace={markSpace}/>\r\n        <Square id={6} markSpace={markSpace}/>\r\n      </div>\r\n      <div className='row'>\r\n        <Square id={1} markSpace={markSpace}/>\r\n        <Square id={4} markSpace={markSpace}/>\r\n        <Square id={7} markSpace={markSpace}/>\r\n      </div>\r\n      <div className='row'>\r\n        <Square id={2} markSpace={markSpace}/>\r\n        <Square id={5} markSpace={markSpace}/>\r\n        <Square id={8} markSpace={markSpace}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","const Footer = ({ player, newGame, winner, moveCount }) => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      { moveCount < 9 ? <p>Player {player ? 'O' : 'X'}, it's your turn!</p> : null}\r\n      <p className='smallP'>Can you mark 3 spaces in a row? The first player to mark 3 spaces in a row, wins!</p>\r\n      <button onClick={newGame}>New Game</button>\r\n      <p>{winner}</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { useState } from 'react';\nimport './App.css';\nimport Header from './Components/Header';\nimport Board from './Components/Board';\nimport Footer from './Components/Footer';\n\n\nfunction App() {\n\n  const [boardState, setBoardState] = useState([2,2,2,2,2,2,2,2,2]);\n  const [currentPlayer, setCurrentPlayer] = useState(0);\n  const [winner, setWinner] = useState(\"There isn't a winner yet.\")\n  const [moveCount, setMoveCount] = useState(0);\n\n  const markSpace = (id, e) => {\n    //prevents player from overwriting another player's tile:\n    if(e.target.innerHTML === '<p></p>'){\n      //console.log(\"It's blank, Jim!\");\n    } else {\n      alert('You cannot move here, this spot is taken by another player. Try another space.');\n      return;\n    }\n    e.preventDefault();\n    //code to mark space as X or O\n    if (currentPlayer === 0) {\n      e.target.innerHTML = 'X';\n    } else if (currentPlayer === 1) {\n      e.target.innerHTML = 'O'\n    }\n    //set move counter\n    let newMCount = moveCount + 1;\n    setMoveCount(newMCount);\n    //set boardState with new player placement\n    let holdState = [...boardState];\n    holdState[(id)] = currentPlayer;\n    setBoardState([...holdState]);\n    //check for a winner, using holdState since boardState isn't fully updated when triggering func\n    checkForWin(holdState, newMCount);\n    //set current player\n    setCurrentPlayer((currentPlayer + 1) % 2);\n  };\n\n  //array showing all of the winning move combinations a player could make\n  const winConditions = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 4 ,8], [2, 4, 6], [0, 3, 6], [1, 4, 7], [2, 5, 8]]\n\n  //function that compares actual moves to win conditions to see if a player won.\n  const checkForWin = (boardState, counter) => {\n    if(counter < 5) return;\n\n    winConditions.forEach(array => {\n      console.log(boardState[(array[0])] + ' ' + boardState[(array[1])] + ' ' + boardState[(array[2])]);\n      if(boardState[(array[0])] === boardState[(array[1])] && boardState[(array[1])] === boardState[(array[2])]) {\n        if(boardState[array[0]] === 0){\n          setWinner('Player X wins!');\n          return;\n        } else if (boardState[array[0]] === 1){\n          setWinner('Player O wins!');\n          return;\n        }\n      }\n    });\n\n    if(counter === 9) {\n      setWinner('This game is a tie! Everyone wins (and loses)...')\n    }\n  }\n\n  const newGame = () => {\n    window.location.reload();\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Board markSpace={markSpace} />\n      <Footer player={currentPlayer} newGame={newGame} winner={winner} moveCount={moveCount}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}